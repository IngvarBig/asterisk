[from-internal-custom]
; Replace EXT_START and EXT_END with your allowed extension range (e.g., 1000â€“1099)
exten => _X.,1,GotoIf($[${CALLERID(num)} >= EXT_START & ${CALLERID(num)} <= EXT_END]?custom-routing,${EXTEN},1)
exten => _+X.,1,GotoIf($[${CALLERID(num)} >= EXT_START & ${CALLERID(num)} <= EXT_END]?custom-routing,${EXTEN},1)

[custom-routing]

; Strip '+' prefix if present
exten => _+X.,1,Goto(custom-routing,${EXTEN:1},1)

exten => _X.,1,NoOp(== Custom Routing from ${CALLERID(num)} to ${EXTEN} ==)

; === Normalization ===
same => n,Set(DST=${EXTEN})
; Customize normalization rules for your country code here:
same => n,ExecIf($["${DST:0:2}" = "+XX"]?Set(DST=0${DST:2}))
same => n,ExecIf($["${DST:0:1}" = "X"]?Set(DST=0${DST:1}))

; === Mobile detection ===
same => n,Set(ISMOBILE=0)
; Define your mobile prefixes (e.g., 79, 89, 91, etc.)
same => n,ExecIf($["${DST:0:2}" = "79"]?Set(ISMOBILE=1))
same => n,ExecIf($["${DST:0:2}" = "89"]?Set(ISMOBILE=1))

; === Counting mechanism ===
same => n,GotoIf($[${ISMOBILE} = 1]?do_count)
same => n,Goto(route,1)

same => n(do_count),Set(CALLCOUNT=${DB(callcounter/count)})
same => n,ExecIf($["${CALLCOUNT}" = ""]?Set(DB(callcounter/count)=0))
same => n,Set(NEWCOUNT=$[${DB(callcounter/count)} + 1])
same => n,Set(DB(callcounter/count)=${NEWCOUNT})
same => n,Goto(route,1)

; === Routing decision ===
exten => route,1,Set(ROUTE=gsm)
; Route every Nth mobile call via alternate trunk (e.g., TDM)
same => n,ExecIf($[${ISMOBILE} = 1]?Set(MOD=$[${NEWCOUNT} % 25]))
same => n,ExecIf($[${ISMOBILE} = 1]?ExecIf($[${MOD} = 0]?Set(ROUTE=tdm)))
same => n,NoOp(--- Route decision: ${ROUTE}, DST=${DST} ---)
same => n,GotoIf($["${ROUTE}" = "tdm"]?tdm,1)
same => n,Goto(gsm,1)

; === TDM trunk routing ===
exten => tdm,1,NoOp(== Routing via TDM trunk ==)
; Optional re-normalization for TDM
same => n,ExecIf($["${DST:0:2}" = "89"]?Set(DST=79${DST:2}))
; Validate DST format before proceeding
same => n,GotoIf($["${DST}" =~ "^79[0-9]{9}$"]?tdm_continue,1)
same => n,NoOp(!!! DST ${DST} not allowed for TDM, dropping !!!)
same => n,Goto(invalid,1)

exten => tdm_continue,1,Set(RECDATE=${STRFTIME(${EPOCH},,%Y/%m/%d)})
same => n,Set(RECTIME=${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)})
same => n,Set(FILENAME=out-${DST}-${CALLERID(num)}-${RECTIME})
same => n,Set(MONITOR_FILENAME=/var/spool/asterisk/monitor/${RECDATE}/${FILENAME})
same => n,Set(CDR(recordingfile)=${FILENAME}.wav)
same => n,MixMonitor(${MONITOR_FILENAME}.wav,b)
same => n,Dial(PJSIP/${DST}@TDM_TRUNK,,T)

; === GSM trunk routing ===
exten => gsm,1,NoOp(== Routing via GSM trunk ==)
same => n,Set(RECDATE=${STRFTIME(${EPOCH},,%Y/%m/%d)})
same => n,Set(RECTIME=${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)})
same => n,Set(PREFIX=)
; Optional: include caller extension as prefix
same => n,ExecIf($[${CALLERID(num)} >= EXT_START & ${CALLERID(num)} <= EXT_END]?Set(PREFIX=${CALLERID(num)}))
same => n,ExecIf($["${PREFIX}" != ""]?Set(DST=${PREFIX}${DST}))
same => n,Set(FILENAME=out-${DST}-${CALLERID(num)}-${RECTIME})
same => n,Set(MONITOR_FILENAME=/var/spool/asterisk/monitor/${RECDATE}/${FILENAME})
same => n,Set(CDR(recordingfile)=${FILENAME}.wav)
same => n,MixMonitor(${MONITOR_FILENAME}.wav,b)
same => n,Set(CHANNEL(rtp_timeout)=15)
same => n,Set(CHANNEL(rtp_hold_timeout)=30)
same => n,Dial(PJSIP/${DST}@GSM_TRUNK,,T)

; === Invalid destination ===
exten => invalid,1,NoOp(!!! Invalid DST ${DST}, dropping call)
same => n,System(echo "${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)} - ${CALLERID(num)} tried ${DST}" >> /var/log/asterisk/blocked_calls.log)
same => n,Hangup(1)
